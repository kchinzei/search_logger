import esbuild from 'esbuild';
import process from 'process';
import builtins from 'builtin-modules';
import { cp, mkdir } from 'fs/promises';
import { resolve, dirname } from 'path';
import { fileURLToPath } from 'url';

const __dirname = dirname(fileURLToPath(import.meta.url));
const distDir = resolve(__dirname, 'dist');

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/`;

const prod = (process.argv[2] === 'production');

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ['main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins,
	],
	format: 'cjs',
	target: 'es2018',
	logLevel: 'info',
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: resolve(distDir, 'main.js'),
	minify: prod,
});

// Copy necessary files into 'dist/'
async function copyFiles() {
	await mkdir(distDir, { recursive: true });
	await cp(resolve(__dirname, 'manifest.json'), resolve(distDir, 'manifest.json'));
	// Optional: add more assets
	// await cp(resolve(__dirname, 'styles.css'), resolve(distDir, 'styles.css'));
	console.log('Copied files to dist/: manifest.json');
}

if (prod) {
	await context.rebuild();
	await copyFiles();
	process.exit(0);
} else {
	await context.watch();
	await copyFiles(); // copy once at start
}
